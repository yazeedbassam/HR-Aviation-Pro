@model WebApplication1.Models.ProfileViewModel
@{
    ViewData["Title"] = "My Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage as string))
{
    <div class="alert alert-success alert-dismissible fade show mt-2 mb-3 rounded-3 shadow" role="alert" style="font-size:1.1em;">
        <i class="fa-solid fa-circle-check"></i>
        @ViewBag.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<style>
    .modal-content {
        border-radius: 1.5rem !important;
    }

    .modal-header {
        border-bottom: none;
        background: linear-gradient(120deg, #e0eaff 0%, #f8f9fa 100%);
    }

    .modal-footer {
        border-top: none;
    }

    .rounded-4 {
        border-radius: 1.5rem !important;
    }

    .table thead th {
        font-weight: bold;
        background-color: #f2f8fa !important;
        border-top: none !important;
    }

    .profile-label {
        font-weight: bold;
        font-size: 0.93rem;
        color: #555;
    }

    .accordion-button:not(.collapsed) {
        color: #0c63e4;
        background-color: #e7f1ff;
    }

    .accordion-body ul {
        padding-left: 20px;
        margin-bottom: 0;
    }

    /* تحسين العناوين لتظهر بوضوح أكبر */
    .card-header h4,
    .card-header h5 {
        font-size: 1.4rem !important;
        font-weight: bold !important;
        text-shadow: 0 1px 2px rgba(0,0,0,0.3) !important;
        color: white !important;
    }

    .card-header {
        padding: 1rem 1.5rem !important;
        border-radius: 1rem 1rem 0 0 !important;
        margin-bottom: 0 !important;
    }

    .card {
        border: none !important;
        box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
    }

    /* إصلاح إضافي للعناوين */
    .card-header {
        position: relative !important;
        z-index: 10 !important;
    }

    .card-header h4 {
        display: block !important;
        visibility: visible !important;
        opacity: 1 !important;
        font-size: 1.5rem !important;
        font-weight: 800 !important;
        text-transform: uppercase !important;
        letter-spacing: 1px !important;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.5) !important;
    }

    /* تحسين Modal */
    .modal-xl {
        max-width: 90% !important;
    }

    /* تحسين عناوين النافذة المنبثقة */
    .modal-body .card-header {
        padding: 1rem 1.5rem !important;
        margin-bottom: 0 !important;
        border: none !important;
    }

    .modal-body .card-header h5 {
        margin: 0 !important;
        letter-spacing: 0.5px !important;
        font-size: 1.4rem !important;
        font-weight: 800 !important;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.4) !important;
        color: white !important;
    }

    /* تحسين وضوح العناوين */
    .modal-body .card-header h5 i {
        color: rgba(255,255,255,0.9) !important;
        margin-right: 0.5rem !important;
    }

    .modal-body .card {
        border: none !important;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
        border-radius: 0.75rem !important;
        overflow: hidden !important;
    }

    .modal-body .card-body {
        padding: 1.5rem !important;
        background: #f8f9fa !important;
    }

    /* تحسين تباين الألوان للعناوين */
    .modal-body .card-header {
        position: relative !important;
        overflow: hidden !important;
    }

    .modal-body .card-header::before {
        content: '' !important;
        position: absolute !important;
        top: 0 !important;
        left: 0 !important;
        right: 0 !important;
        bottom: 0 !important;
        background: rgba(0,0,0,0.1) !important;
        z-index: 1 !important;
    }

    .modal-body .card-header h5 {
        position: relative !important;
        z-index: 2 !important;
    }

    .modal-content {
        border: none !important;
        box-shadow: 0 20px 60px rgba(0,0,0,0.3) !important;
    }

    .form-control-lg, .form-select-lg {
        font-size: 1rem !important;
        padding: 0.75rem 1rem !important;
        border-radius: 0.5rem !important;
        border: 2px solid #e9ecef !important;
        transition: all 0.3s ease !important;
    }

    .form-control-lg:focus, .form-select-lg:focus {
        border-color: #007bff !important;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25) !important;
        transform: translateY(-2px) !important;
    }

    .card-header {
        border-bottom: 2px solid #e9ecef !important;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%) !important;
    }

    .btn-lg {
        padding: 0.75rem 1.5rem !important;
        font-size: 1.1rem !important;
        border-radius: 0.5rem !important;
        transition: all 0.3s ease !important;
    }

    .btn-lg:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 8px 25px rgba(0,0,0,0.2) !important;
    }

    /* تحسين أزرار التصدير */
    .btn-group .btn {
        transition: all 0.3s ease !important;
        border: none !important;
        font-weight: 600 !important;
        letter-spacing: 0.5px !important;
    }

    .btn-group .btn:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 6px 20px rgba(0,0,0,0.25) !important;
    }

    .btn-group .btn-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%) !important;
        border: none !important;
    }

    .btn-group .btn-danger {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%) !important;
        border: none !important;
    }

    .btn-group .btn i {
        font-size: 1.1em !important;
    }
</style>

@if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger">
        <strong>Please correct the following errors:</strong>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}


    <!-- Main Profile Card -->
    <div class="container mt-4" style="max-width:900px;">
        
                 <!-- General Information Card -->
         <div class="card shadow-lg rounded-4 mb-4">
             <div class="card-header bg-gradient text-white text-center" style="background: linear-gradient(135deg, #007bff 0%, #0056b3 100%) !important; padding: 1.5rem !important; min-height: 80px !important;">
                 <h4 class="mb-0 fw-bold" style="color: white !important; text-shadow: 2px 2px 4px rgba(0,0,0,0.5) !important;"><i class="fa-solid fa-user-circle me-2"></i>General Information</h4>
             </div>
            <div class="card-body p-4">
            <div class="card-body">
        <div class="row g-0 align-items-center">
            <div class="col-md-3 text-center mb-3 mb-md-0">
                <img src="@(!string.IsNullOrEmpty(Model.PhotoPath) ? Url.Content(Model.PhotoPath) : "/images/default-avatar.png")"
                     class="rounded-circle border border-3 shadow-sm"
                     style="width:120px; height:120px; object-fit:cover;"
                     alt="Profile"
                     onerror="this.onerror=null;this.src='/images/default-avatar.png';" />
                <h4 class="mt-3 fw-bold">@Model.FullName</h4>
                @if (!string.IsNullOrEmpty(Model.JobTitle))
                {
                    <div class="badge bg-primary bg-opacity-75 text-light px-3 py-2 rounded-3 mb-2">@Model.JobTitle</div>
                }
            </div>
            <div class="col-md-9">
                <div class="d-flex justify-content-end mb-3">
                     <button type="button" class="btn btn-outline-primary px-4 fw-bold me-2"
                             data-bs-toggle="modal" data-bs-target="#editProfileModal">
                         <i class="fa-solid fa-pen-to-square"></i> Edit Profile
                     </button>
                     
                     <!-- Export Buttons -->
                     <div class="btn-group" role="group">
                         <button type="button" class="btn btn-success px-3 fw-bold" onclick="exportToExcel()">
                             <i class="fa-solid fa-file-excel me-2"></i>Export Excel
                         </button>
                         <button type="button" class="btn btn-danger px-3 fw-bold" onclick="exportToPDF()">
                             <i class="fa-solid fa-file-pdf me-2"></i>Export PDF
                         </button>
                     </div>
                 </div>
                <div class="table-responsive">
                    <table class="table table-borderless table-sm mb-0">
                        <tbody>
                            <tr><th class="w-25 text-end profile-label">Job Title:</th><td class="profile-value">@Model.JobTitle</td></tr>
                            <tr><th class="text-end profile-label">Department:</th><td class="profile-value">@Model.CurrentDepartment</td></tr>
                            <tr><th class="text-end profile-label">Email:</th><td class="profile-value">@Model.Email</td></tr>
                            <tr><th class="text-end profile-label">Phone:</th><td class="profile-value">@Model.PhoneNumber</td></tr>
                            <tr><th class="text-end profile-label">Hire Date:</th><td class="profile-value">@(Model.HireDate?.ToString("dd MMM, yyyy") ?? "-")</td></tr>
                            
                            @if (Model.UserType == "Controller")
                            {
                                <tr><th class="text-end profile-label">Education Level:</th><td class="profile-value">@Model.EducationLevel</td></tr>
                                <tr><th class="text-end profile-label">Date of Birth:</th><td class="profile-value">@(Model.DateOfBirth?.ToString("dd MMM, yyyy") ?? "-")</td></tr>
                                <tr><th class="text-end profile-label">Marital Status:</th><td class="profile-value">@Model.MaritalStatus</td></tr>
                            }
                            else if (Model.UserType == "Employee")
                            {
                                <tr><th class="text-end profile-label">Gender:</th><td class="profile-value">@Model.Gender</td></tr>
                                <tr><th class="text-end profile-label">Location:</th><td class="profile-value">@Model.Location</td></tr>
                            }

                            <tr><th class="text-end profile-label">Address:</th><td class="profile-value">@Model.Address</td></tr>
                            <tr><th class="text-end profile-label">Employment Status:</th><td class="profile-value">@Model.EmploymentStatus</td></tr>
                            <tr><th class="text-end profile-label">Emergency Contact:</th><td class="profile-value">@Model.EmergencyContact</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

         <!-- Financial Information Card -->
     <div class="card shadow-lg rounded-4 mb-4">
         <div class="card-header bg-gradient text-white text-center" style="background: linear-gradient(135deg, #dc3545 0%, #c82333 100%) !important; padding: 1.5rem !important; min-height: 80px !important;">
             <h4 class="mb-0 fw-bold" style="color: white !important; text-shadow: 2px 2px 4px rgba(0,0,0,0.5) !important;"><i class="fa-solid fa-money-bill-wave me-2"></i>Financial Information</h4>
         </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="table-responsive">
                            <table class="table table-borderless table-sm mb-0">
                                <tbody>
                                    @if (Model.CurrentSalary.HasValue)
                                    {
                                        <tr>
                                            <th class="w-50 text-end profile-label">Current Salary:</th>
                                            <td class="profile-value fw-bold text-success">@Model.CurrentSalary.Value.ToString("C")</td>
                                        </tr>
                                    }
                                    @if (Model.AnnualIncreasePercentage.HasValue)
                                    {
                                        <tr>
                                            <th class="text-end profile-label">Annual Increase %:</th>
                                            <td class="profile-value">@Model.AnnualIncreasePercentage.Value.ToString("P1")</td>
                                        </tr>
                                    }
                                    @if (Model.SalaryAfterAnnualIncrease.HasValue)
                                    {
                                        <tr>
                                            <th class="text-end profile-label">Salary After Increase:</th>
                                            <td class="profile-value fw-bold text-primary">@Model.SalaryAfterAnnualIncrease.Value.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="table-responsive">
                            <table class="table table-borderless table-sm mb-0">
                                <tbody>
                                    @if (!string.IsNullOrEmpty(Model.BankAccountNumber))
                                    {
                                        <tr>
                                            <th class="w-50 text-end profile-label">Bank Account:</th>
                                            <td class="profile-value">@Model.BankAccountNumber</td>
                                        </tr>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.BankName))
                                    {
                                        <tr>
                                            <th class="text-end profile-label">Bank Name:</th>
                                            <td class="profile-value">@Model.BankName</td>
                                        </tr>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.TaxId))
                                    {
                                        <tr>
                                            <th class="text-end profile-label">Tax ID:</th>
                                            <td class="profile-value">@Model.TaxId</td>
                                        </tr>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.InsuranceNumber))
                                    {
                                        <tr>
                                            <th class="text-end profile-label">Insurance #:</th>
                                            <td class="profile-value">@Model.InsuranceNumber</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Show message if no financial data -->
            @if (!Model.CurrentSalary.HasValue && !Model.SalaryAfterAnnualIncrease.HasValue && string.IsNullOrEmpty(Model.BankAccountNumber))
            {
                <div class="card-body text-center">
                    <div class="alert alert-info mb-0">
                                             <i class="fa-solid fa-info-circle me-2"></i>
                     No financial data available at the moment
                    </div>
                </div>
            }
        </div>

    <!-- Tabs for Licenses, Certificates, Observations, and Projects -->
    @if (User.Identity?.IsAuthenticated == true)
    {
    <div class="card shadow rounded-4 p-3">
        <ul class="nav nav-tabs nav-justified mb-3" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation"><button class="nav-link active" id="licenses-tab" data-bs-toggle="tab" data-bs-target="#licenses" type="button" role="tab"><i class="fa-solid fa-id-card"></i> Licenses</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link" id="certs-tab" data-bs-toggle="tab" data-bs-target="#certs" type="button" role="tab"><i class="fa-solid fa-certificate"></i> Certificates</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link" id="obs-tab" data-bs-toggle="tab" data-bs-target="#obs" type="button" role="tab"><i class="fa-solid fa-plane-departure"></i> Observations</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link" id="projects-tab" data-bs-toggle="tab" data-bs-target="#projects" type="button" role="tab"><i class="fa-solid fa-diagram-project"></i> My Projects</button></li>
        </ul>
        <div class="tab-content" id="profileTabsContent">
            <!-- Licenses Tab -->
            <div class="tab-pane fade show active" id="licenses" role="tabpanel">@if(Model.Licenses != null && Model.Licenses.Any()){
            <div class="table-responsive"><table class="table table-bordered align-middle text-center"><thead class="table-light"><tr><th>#</th><th>Type</th><th>Issue Date</th><th>Expiry Date</th><th>File</th></tr></thead><tbody>@foreach (var (lic, i) in Model.Licenses.Select((item, index) => (item, index))) {
            <tr><td>@(i + 1)</td><td>@lic.TypeName</td><td>@(lic.IssueDate?.ToString("dd-MMM-yyyy") ?? "-")</td><td>@(lic.ExpiryDate?.ToString("dd-MMM-yyyy") ?? "-")</td><td>@if (!string.IsNullOrEmpty(lic.FilePath)) {
            <a href="@Url.Content(lic.FilePath)" target="_blank" class="btn btn-outline-success btn-sm"><i class="fa-solid fa-download"></i></a>
                        } else
            {

                <span class="text-muted small">N/A</span>
            }
</td></tr>
                        }
</tbody></table></div>
                        } else
            {

                <div class="alert alert-light text-center">No licenses found.</div>
            }
</div>
            <!-- Certificates Tab -->
            <div class="tab-pane fade" id="certs" role="tabpanel">@if(Model.Certificates != null && Model.Certificates.Any()){
            <div class="table-responsive"><table class="table table-bordered align-middle text-center"><thead class="table-light"><tr><th>#</th><th>Type</th><th>Title</th><th>Status</th><th>File</th></tr></thead><tbody>@foreach (var (cert, i) in Model.Certificates.Select((item, index) => (item, index))) {
            <tr><td>@(i + 1)</td><td>@cert.TypeName</td><td>@cert.Title</td><td>@cert.Status</td><td>@if (!string.IsNullOrEmpty(cert.FilePath)) {
            <a href="@Url.Content(cert.FilePath)" target="_blank" class="btn btn-outline-success btn-sm"><i class="fa-solid fa-download"></i></a>
                        } else
            {

                <span class="text-muted small">N/A</span>
            }
</td></tr>
                        }
</tbody></table></div>
                        } else
            {

                <div class="alert alert-light text-center">No certificates found.</div>
            }
</div>
            <!-- Observations Tab -->
            <div class="tab-pane fade" id="obs" role="tabpanel">@if(Model.Observations != null && Model.Observations.Any()){
            <div class="table-responsive"><table class="table table-bordered align-middle text-center"><thead class="table-light"><tr><th>#</th><th>Country</th><th>License No.</th><th>Duration</th><th>Depart Date</th><th>Return Date</th></tr></thead><tbody>@foreach (var (obs, i) in Model.Observations.Select((item, index) => (item, index))) {
            <tr><td>@(i + 1)</td><td>@obs.TravelCountry</td><td>@obs.LicenseNumber</td><td>@obs.DurationDays days</td><td>@obs.DepartDate?.ToString("dd-MMM-yyyy")</td><td>@obs.ReturnDate?.ToString("dd-MMM-yyyy")</td></tr>
                        }
</tbody></table></div>
                        } else
            {

                <div class="alert alert-light text-center">No observations found.</div>
            }
</div>

            <!-- PROJECTS TAB WITH ACCORDION - CORRECTED -->
            <div class="tab-pane fade" id="projects" role="tabpanel">
                @if (Model.Projects != null && Model.Projects.Any())
                {
                    <div class="accordion" id="projectsAccordion">
                        @foreach (var (pvm, index) in Model.Projects.Select((item, i) => (item, i)))
                        {
                            var project = pvm.Project;
                            string collapseId = $"collapse-{project.ProjectId}";
                            string headerId = $"header-{project.ProjectId}";
                            var statusBadge = project.Status switch
                            {
                                "Completed" => "badge bg-success",
                                "In Progress" => "badge bg-primary",
                                "On Hold" => "badge bg-secondary",
                                "Cancelled" => "badge bg-danger",
                                _ => "badge bg-warning text-dark"
                            };

                            <div class="accordion-item">
                                <h2 class="accordion-header" id="@headerId">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                                        <span class="fw-bold me-auto">#@(index + 1) - @project.ProjectName</span>
                                        <span class="@statusBadge">@project.Status</span>
                                    </button>
                                </h2>
                                <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headerId" data-bs-parent="#projectsAccordion">
                                    <div class="accordion-body">
                                        @if (!string.IsNullOrEmpty(project.Description))
                                        {
                                            string displayDescription = project.Description;
                                            int maxLength = 150; // يمكنك تعديل هذا الرقم حسب الحاجة
                                            if (displayDescription.Length > maxLength)
                                            {
                                                displayDescription = displayDescription.Substring(0, maxLength) + "...";
                                            }
                                            <p class="text-danger"
                                               data-bs-toggle="popover"
                                               data-bs-trigger="hover focus"
                                               data-bs-placement="top"
                                               data-bs-title="Project Description"
                                               data-bs-content="@project.Description">
                                                <strong>Description:</strong>
                                                @displayDescription
                                            </p>
                                            <hr />
                                        }
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <h6><i class="fa-solid fa-info-circle text-primary"></i> Main Info</h6>
                                                <p class="mb-1"><small><strong>Start:</strong> @(project.StartDate?.ToString("dd MMM, yyyy") ?? "-")</small></p>
                                                <p class="mb-1"><small><strong>End:</strong> @(project.EndDate?.ToString("dd MMM, yyyy") ?? "-")</small></p>
                                                <p class="mb-0"><small><strong>Location:</strong> @(project.Location ?? "N/A")</small></p>
                                            </div>
                                            <div class="col-md-6">
                                                @if (pvm.Participants.Any())
                                                {
                                                    <h6><i class="fa-solid fa-users text-primary"></i> Participants</h6>
                                                    
                                                        // بناء النص المختصر للمشاركين
                                                        string summaryText = string.Join(", ", pvm.Participants.Take(5));
                                                        if (pvm.Participants.Count > 5)
                                                        {
                                                            summaryText += $" (+{pvm.Participants.Count - 5} more)";
                                                        }

                                                        // بناء محتوى HTML الكامل للـ Popover
                                                        System.Text.StringBuilder fullParticipantsHtmlBuilder = new System.Text.StringBuilder();
                                                        fullParticipantsHtmlBuilder.Append("<ul>");
                                                        foreach (var participant in pvm.Participants)
                                                        {
                                                            fullParticipantsHtmlBuilder.Append($"<li>{participant}</li>");
                                                        }
                                                        fullParticipantsHtmlBuilder.Append("</ul>");
                                                        string fullParticipantsHtml = fullParticipantsHtmlBuilder.ToString();
                                                    
                                                    <p data-bs-toggle="popover"
                                                       data-bs-trigger="hover focus"
                                                       data-bs-placement="top"
                                                       data-bs-title="Project Participants"
                                                       data-bs-content="@Html.Raw(fullParticipantsHtml)"
                                                       data-bs-html="true">
                                                        <small>@summaryText</small>
                                                    </p>
                                                }
                                            </div>
                                        </div>
                                        @if (pvm.Divisions.Any())
                                        {
                                            <hr />
                                            <h6><i class="fa-solid fa-building text-primary"></i> Divisions</h6>
                                            <div>
                                                @foreach (var division in pvm.Divisions)
                                                {
                                                    <span class="badge bg-light text-dark me-1">@division</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info text-center">You are not currently assigned to any projects.</div>
                }
            </div>
        </div>
    </div>
    }
</div>

<!-- Department Overview Section -->
<div class="container mt-4" style="max-width:900px;">
    <div class="card shadow-lg rounded-4 mb-4">
                 <div class="card-header bg-gradient text-white text-center" style="background: linear-gradient(135deg, #6f42c1 0%, #8e44ad 100%) !important; padding: 1.5rem !important; min-height: 80px !important;">
             <h4 class="mb-0 fw-bold" style="color: white !important; text-shadow: 2px 2px 4px rgba(0,0,0,0.5) !important;">
                 <i class="fa-solid fa-users me-2"></i> 
                 Department Overview - @ViewBag.UserDepartment
             </h4>
         </div>
        <div class="card-body">
            @if (ViewBag.DepartmentEmployees != null && ((List<object>)ViewBag.DepartmentEmployees).Count > 0)
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Type</th>
                                <th>Name</th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Department</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (dynamic employee in ViewBag.DepartmentEmployees)
                            {
                                <tr>
                                    <td>
                                        <span class="badge @(employee.UserType == "Controller" ? "bg-primary" : "bg-success")">
                                            @employee.UserType
                                        </span>
                                    </td>
                                    <td>@employee.FullName</td>
                                    <td>@employee.Username</td>
                                    <td>@employee.Email</td>
                                    <td>@employee.PhoneNumber</td>
                                    <td>@employee.Department</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center">
                    <i class="fa-solid fa-info-circle"></i>
                    No employees found in this department.
                </div>
            }
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content rounded-4">
            <form asp-action="Profile" asp-controller="Account" method="post" enctype="multipart/form-data">
                <div class="modal-header bg-gradient text-white" style="background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);">
                    <h4 class="modal-title fw-bold" id="editProfileModalLabel">
                        <i class="fa-solid fa-user-pen me-2"></i>Edit Profile
                    </h4>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input asp-for="UserId" type="hidden" /> @* Changed from ControllerId to UserId *@
                    <input asp-for="UserType" type="hidden" /> @* Added hidden field for UserType *@

                    <!-- Personal Information Section -->
                    <div class="card mb-4 border-0 shadow-sm">
                        <div class="card-header text-white" style="background: linear-gradient(135deg, #007bff 0%, #0056b3 100%); border-radius: 0.75rem 0.75rem 0 0;">
                            <h5 class="mb-0 fw-bold" style="font-size: 1.3rem; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
                                <i class="fa-solid fa-user me-2"></i>Personal Information
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label asp-for="FullName" class="form-label fw-bold text-dark">Full Name</label>
                                    <input asp-for="FullName" class="form-control form-control-lg" placeholder="Enter your full name" />
                                    <span asp-validation-for="FullName" class="text-danger small"></span>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="Email" class="form-label fw-bold text-dark">Email Address</label>
                                    <input asp-for="Email" class="form-control form-control-lg" placeholder="Enter your email" />
                                    <span asp-validation-for="Email" class="text-danger small"></span>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="PhoneNumber" class="form-label fw-bold text-dark">Phone Number</label>
                                    <input asp-for="PhoneNumber" class="form-control form-control-lg" placeholder="Enter your phone number" />
                                    <span asp-validation-for="PhoneNumber" class="text-danger small"></span>
                                </div>
                        
                                @if (Model.UserType == "Controller")
                                {
                                    <div class="col-md-6">
                                        <label asp-for="DateOfBirth" class="form-label fw-bold text-dark">Date of Birth</label>
                                        <input asp-for="DateOfBirth" type="date" class="form-control form-control-lg" value="@Model.DateOfBirth?.ToString("yyyy-MM-dd")" />
                                        <span asp-validation-for="DateOfBirth" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="MaritalStatus" class="form-label fw-bold text-dark">Marital Status</label>
                                        <select asp-for="MaritalStatus" class="form-select form-select-lg">
                                            <option value="">Select Marital Status...</option>
                                            <option value="Single">Single</option>
                                            <option value="Married">Married</option>
                                            <option value="Divorced">Divorced</option>
                                            <option value="Widowed">Widowed</option>
                                        </select>
                                        <span asp-validation-for="MaritalStatus" class="text-danger small"></span>
                                    </div>
                                }
                                else if (Model.UserType == "Employee")
                                {
                                    <div class="col-md-6">
                                        <label asp-for="Gender" class="form-label fw-bold text-dark">Gender</label>
                                        <select asp-for="Gender" class="form-select form-select-lg">
                                            <option value="">Select Gender...</option>
                                            <option value="Male">Male</option>
                                            <option value="Female">Female</option>
                                        </select>
                                        <span asp-validation-for="Gender" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="Location" class="form-label fw-bold text-dark">Location</label>
                                        <input asp-for="Location" class="form-control form-control-lg" placeholder="Enter your location" />
                                        <span asp-validation-for="Location" class="text-danger small"></span>
                                    </div>
                                }

                                <div class="col-md-6">
                                    <label asp-for="Address" class="form-label fw-bold text-dark">Address</label>
                                    <input asp-for="Address" class="form-control form-control-lg" placeholder="Enter your address" />
                                    <span asp-validation-for="Address" class="text-danger small"></span>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="EmergencyContact" class="form-label fw-bold text-dark">Emergency Contact</label>
                                    <input asp-for="EmergencyContact" class="form-control form-control-lg" placeholder="Enter emergency contact" />
                                    <span asp-validation-for="EmergencyContact" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Professional Information Section -->
                    <div class="card mb-4 border-0 shadow-sm">
                        <div class="card-header text-white" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%); border-radius: 0.75rem 0.75rem 0 0;">
                            <h5 class="mb-0 fw-bold" style="font-size: 1.3rem; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
                                <i class="fa-solid fa-briefcase me-2"></i>Professional Information
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                @if (Model.UserType == "Controller")
                                {
                                    <div class="col-md-6">
                                        <label asp-for="EducationLevel" class="form-label fw-bold text-dark">Education Level</label>
                                        <select asp-for="EducationLevel" class="form-select form-select-lg">
                                            <option value="">Select Education Level...</option>
                                            <option value="High School">High School</option>
                                            <option value="Diploma">Diploma</option>
                                            <option value="Bachelor">Bachelor</option>
                                            <option value="Master">Master</option>
                                            <option value="PhD">PhD</option>
                                            <option value="Other">Other</option>
                                        </select>
                                        <span asp-validation-for="EducationLevel" class="text-danger small"></span>
                                    </div>
                                }
                                <div class="col-md-6">
                                    <label asp-for="PhotoFile" class="form-label fw-bold text-dark">
                                        <i class="fa-solid fa-camera me-2"></i>Update Profile Picture
                                    </label>
                                    <input asp-for="PhotoFile" class="form-control form-control-lg" type="file" accept="image/*" />
                                    <div class="form-text text-muted">Supported formats: JPG, PNG, GIF (Max: 5MB)</div>
                                    <span asp-validation-for="PhotoFile" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Security Section -->
                    <div class="card mb-4 border-0 shadow-sm">
                        <div class="card-header text-white" style="background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%); border-radius: 0.75rem 0.75rem 0 0;">
                            <h5 class="mb-0 fw-bold" style="font-size: 1.3rem; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
                                <i class="fa-solid fa-shield-halved me-2"></i>Security
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-12">
                                    <label asp-for="Password" class="form-label fw-bold text-dark">
                                        <i class="fa-solid fa-key me-2"></i>New Password
                                    </label>
                                    <input asp-for="Password" class="form-control form-control-lg" type="password" placeholder="Enter new password (leave blank to keep current)" />
                                    <div class="form-text text-muted">Leave blank if you don't want to change your password</div>
                                    <span asp-validation-for="Password" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Read-only Information Section -->
                    <div class="card mb-4 border-0 shadow-sm">
                        <div class="card-header text-white" style="background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%); border-radius: 0.75rem 0.75rem 0 0;">
                            <h5 class="mb-0 fw-bold" style="font-size: 1.3rem; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
                                <i class="fa-solid fa-info-circle me-2"></i>Read-only Information
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <label class="form-label fw-bold text-dark">Job Title</label>
                                    <input asp-for="JobTitle" class="form-control form-control-lg bg-light" readonly />
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label fw-bold text-dark">Department</label>
                                    <input asp-for="CurrentDepartment" class="form-control form-control-lg bg-light" readonly />
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label fw-bold text-dark">Username</label>
                                    <input asp-for="Username" class="form-control form-control-lg bg-light" readonly />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer bg-light">
                    <button type="button" class="btn btn-secondary btn-lg px-4" data-bs-dismiss="modal">
                        <i class="fa-solid fa-times me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-success btn-lg px-5 fw-bold">
                        <i class="fa-solid fa-save me-2"></i>Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            // This script runs when the page is ready.
            // It checks if there are any validation errors returned from the server.
            if ('@(!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)' == 'True') {
                // If there are errors, it finds the modal by its ID and shows it.
                var editModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
                editModal.show();
            }

                         // تهيئة جميع Bootstrap Popovers في الصفحة
             var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
             var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
                 return new bootstrap.Popover(popoverTriggerEl)
             })
         });

         // دوال التصدير
         function exportToExcel() {
             showExportMessage('Excel', 'success');
             
             // استخدام window.open للتصدير
             window.open('@Url.Action("ExportToExcel", "Account")', '_blank');
         }

         function exportToPDF() {
             showExportMessage('PDF', 'danger');
             
             // استخدام window.open للتصدير
             window.open('@Url.Action("ExportToPDF", "Account")', '_blank');
         }

         function showExportMessage(type, colorClass) {
             const message = `جاري تصدير الملف إلى ${type}...`;
             const alertDiv = document.createElement('div');
             alertDiv.className = `alert alert-${colorClass} alert-dismissible fade show position-fixed`;
             alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
             alertDiv.innerHTML = `
                 <i class="fa-solid fa-${type === 'Excel' ? 'file-excel' : 'file-pdf'} me-2"></i>
                 ${message}
                 <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
             `;
             
             document.body.appendChild(alertDiv);
             
             // إزالة الرسالة تلقائياً بعد 3 ثواني
             setTimeout(() => {
                 if (alertDiv.parentNode) {
                     alertDiv.remove();
                 }
             }, 3000);
         }
    </script>
}
