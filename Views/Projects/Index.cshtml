@model WebApplication1.Models.ProjectIndexViewModel

@{
    ViewData["Title"] = "Courses";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<style>
    body {
        background-color: #f4f7f6;
    }

    .main-header {
        font-size: 1.5rem;
        font-weight: 600;
        color: #004085;
    }

    .project-card {
        border: 0;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.07);
        transition: all 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .project-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .project-card .card-header {
            background-color: transparent;
            border-bottom: 1px solid #e9ecef;
            padding: 1rem 1.25rem;
        }

    .project-title {
        font-weight: 600;
        font-size: 1.1rem;
        color: #343a40;
    }

    .status-badge {
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.4em 0.8em;
    }

    .project-card .card-body {
        padding: 1.25rem;
        flex-grow: 1; /* Allows the body to take up available space */
    }

    .project-card .card-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    .participant-avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: #0d6efd;
        color: white;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
        font-weight: 600;
        margin-left: -10px;
        border: 2px solid white;
        transition: transform 0.2s;
    }

        .participant-avatar:hover {
            transform: scale(1.1);
            z-index: 10;
        }

    .participant-extra {
        background-color: #6c757d;
    }

    .division-tag {
        font-size: 0.8rem;
        font-weight: 500;
        background-color: #e9ecef;
        padding: 0.25rem 0.6rem;
        border-radius: 5px;
        color: #495057;
    }
</style>

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
        <div class="main-header">
            <i class="fa-solid fa-diagram-project me-2"></i>
            @ViewData["Title"]
        </div>
        <div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fa-solid fa-plus me-1"></i> Add New Course
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    <!-- Filters -->
    <div class="row mb-4">
        <div class="col-md-4">
            <input type="text" id="projectSearch" class="form-control" placeholder="Search by Courses name...">
        </div>
        <div class="col-md-3">
            <select id="statusFilter" class="form-select">
                <option value="">All Statuses</option>
                <option value="Planning">Planning</option>
                <option value="In Progress">In Progress</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
            </select>
        </div>
    </div>


    <!-- Project Cards -->
    <div class="row" id="projects-container">
        @if (Model.Projects.Any())
        {
            @foreach (var vm in Model.Projects)
            {
                string statusClass = vm.Project.Status switch
                {
                    "Completed" => "bg-success",
                    "In Progress" => "bg-primary",
                    "Cancelled" => "bg-danger",
                    _ => "bg-secondary"
                };

                <div class="col-xl-4 col-lg-6 mb-4 project-item" data-status="@vm.Project.Status" data-name="@vm.Project.ProjectName.ToLower()">
                    <div class="card project-card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="project-title mb-0">@vm.Project.ProjectName</h5>
                            <span class="badge rounded-pill @statusClass status-badge">@vm.Project.Status</span>
                        </div>
                        <div class="card-body">
                            <p class="card-text text-muted small">@vm.Project.Description</p>
                            <hr>
                            <div class="d-flex justify-content-between text-muted small">
                                <span><i class="fa-solid fa-calendar-alt me-1"></i> <strong>Start:</strong> @(vm.Project.StartDate?.ToString("dd MMM yyyy") ?? "N/A")</span>
                                <span><i class="fa-solid fa-calendar-check me-1"></i> <strong>End:</strong> @(vm.Project.EndDate?.ToString("dd MMM yyyy") ?? "N/A")</span>
                            </div>
                            <div class="mt-3">
                                <h6 class="small text-uppercase text-muted">Divisions</h6>
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var division in vm.Divisions.Take(3))
                                    {
                                        <span class="division-tag">@division</span>
                                    }
                                    @if (vm.Divisions.Count > 3)
                                    {
                                        <span class="division-tag">+@(vm.Divisions.Count - 3) more</span>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                @foreach (var participant in vm.Participants.Take(4))
                                {
                                    <div class="participant-avatar" title="@participant">@(participant.Contains(" ") ? string.Concat(participant.Split(' ').Select(s => s[0])) : participant.Substring(0, 2).ToUpper())</div>
                                }
                                @if (vm.Participants.Count > 4)
                                {
                                    <div class="participant-avatar participant-extra">+@(vm.Participants.Count - 4)</div>
                                }
                            </div>
                            <div>
                                @* <a href="#" class="btn btn-outline-primary btn-sm">View Details</a> *@
                                <a asp-action="Details" asp-route-id="@vm.Project.ProjectId" class="btn btn-outline-primary btn-sm">View Details</a>


                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info">No projects found. You can create a new one!</div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('projectSearch');
            const statusFilter = document.getElementById('statusFilter');
            const projectsContainer = document.getElementById('projects-container');
            const projectItems = projectsContainer.querySelectorAll('.project-item');

            function filterProjects() {
                const searchText = searchInput.value.toLowerCase();
                const statusValue = statusFilter.value;

                projectItems.forEach(item => {
                    const name = item.dataset.name;
                    const status = item.dataset.status;

                    const nameMatch = name.includes(searchText);
                    const statusMatch = statusValue === '' || status === statusValue;

                    if (nameMatch && statusMatch) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
            }

            searchInput.addEventListener('keyup', filterProjects);
            statusFilter.addEventListener('change', filterProjects);
        });
    </script>
}

